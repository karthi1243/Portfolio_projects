--3 key datasets for this restraunt case study:

sales
menu
members

CREATE TABLE sales (
  "customer_id" VARCHAR(1),
  "order_date" DATE,
  "product_id" INTEGER
);

INSERT INTO sales
  ("customer_id", "order_date", "product_id")
VALUES
  ('A', '2021-01-01', '1'),
  ('A', '2021-01-01', '2'),
  ('A', '2021-01-07', '2'),
  ('A', '2021-01-10', '3'),
  ('A', '2021-01-11', '3'),
  ('A', '2021-01-11', '3'),
  ('B', '2021-01-01', '2'),
  ('B', '2021-01-02', '2'),
  ('B', '2021-01-04', '1'),
  ('B', '2021-01-11', '1'),
  ('B', '2021-01-16', '3'),
  ('B', '2021-02-01', '3'),
  ('C', '2021-01-01', '3'),
  ('C', '2021-01-01', '3'),
  ('C', '2021-01-07', '3');
 

CREATE TABLE menu (
  "product_id" INTEGER,
  "product_name" VARCHAR(5),
  "price" INTEGER
);

INSERT INTO menu
  ("product_id", "product_name", "price")
VALUES
  ('1', 'sushi', '10'),
  ('2', 'curry', '15'),
  ('3', 'ramen', '12');
  

CREATE TABLE members (
  "customer_id" VARCHAR(1),
  "join_date" DATE
);

INSERT INTO members
  ("customer_id", "join_date")
VALUES
  ('A', '2021-01-07'),
  ('B', '2021-01-09');

  /* --------------------
   Case Study Questions
   --------------------*/

-- 1. What is the total amount each customer spent at the restaurant?
SELECT
customer_id,SUM(m.price) AS total_price
FROM
 sales AS s
 INNER JOIN
 menu AS m
 ON
 s.product_id = m.product_id 
GROUP BY customer_id;
-- 2. How many days has each customer visited the restaurant?
SELECT
customer_id,count(DISTINCT order_date) AS total_days
FROM
 sales 
GROUP BY customer_id;

-- 3. What was the first item from the menu purchased by each customer?
WITH CTE AS(
SELECT
s.customer_id,m.product_name, s.order_date, 
RANK()OVER( PARTITION BY customer_id ORDER BY s.order_date asc) AS rnk
FROM
sales AS s
INNER JOIN
menu AS m
ON s.product_id = m.product_id
)
SELECT
customer_id, product_name
FROM CTE
WHERE rnk = 1;
-- 4. What is the most purchased item on the menu and how many times was it purchased by all customers?

SELECT TOP 1
s.product_id ,count(order_date) as total_orders, m.product_name
FROM
sales AS s
LEFT JOIN
menu AS M
ON s.product_id = m.product_id
GROUP BY s.product_id,m.product_name
ORDER BY total_orders desc
-- 5. Which item was the most popular for each customer?
WITH CTE AS (
SELECT
customer_id,s.product_id, COUNT(order_date) AS popularity, m.product_name,
RANK()OVER(PARTITION BY customer_id ORDER BY COUNT(order_date) desc) as rnk
FROM
SALES AS s
INNER JOIN
menu AS m
ON s.product_id = m.product_id
GROUP BY customer_id,s.product_id, m.product_name
)
SELECT
 customer_id, product_name
FROM
 CTE
WHERE rnk = 1

-- 6. Which item was purchased first by the customer after they became a member?

WITH CTE AS (
SELECT 
s.customer_id,m.product_name,s.order_date,
RANK() OVER(PARTITION BY s.customer_id ORDER BY order_date asc) AS rnk
FROM
sales AS s
INNER JOIN
members AS ms
ON
s.customer_id = ms.customer_id
INNER JOIN
menu AS m
ON 
s.product_id = m.product_id
WHERE 
s.order_date >= ms.join_date
)
SELECT
*
FROM CTE
WHERE rnk = 1

-- 7. Which item was purchased just before the customer became a member?

WITH CTE AS (
SELECT 
s.customer_id,m.product_name,s.order_date,
RANK() OVER(PARTITION BY s.customer_id ORDER BY order_date desc) AS rnk
FROM
sales AS s
INNER JOIN
members AS ms
ON
s.customer_id = ms.customer_id
INNER JOIN
menu AS m
ON 
s.product_id = m.product_id
WHERE 
s.order_date < ms.join_date
)
SELECT
*
FROM CTE
WHERE rnk = 1
-- 8. What is the total items and amount spent for each member before they became a member?

SELECT
s.customer_id, COUNT(m.product_id) AS total_items, SUM(price) AS amt_spent
FROM
 sales AS s 
 INNER JOIN
 members AS ms
 ON
 s.customer_id = ms.customer_id
 INNER JOIN
 menu AS m
 ON 
 s.product_id = m.product_id
 WHERE s.order_date < ms.join_date
 GROUP BY s.customer_id

-- 9.  If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?
WITH CTE AS (
SELECT
s.customer_id,CASE WHEN m.product_name = 'sushi' THEN price*10*2 
              ELSE price*10 END AS points
FROM
sales AS s 
INNER JOIN
menu AS m
ON
s.product_id = m.product_id
)
SELECT
customer_id,SUM(points) AS ttl_points
FROM CTE 
GROUP BY customer_id
-- 10. In the first week after a customer joins the program (including their join date) they earn 2x points on all items, not just sushi - how many points do customer A and B have at the end of January?
WITH CTE AS (
SELECT
s.customer_id,ms.join_date AS offer_start, DATEADD(day,6,ms.join_date) AS end_offer, 
              CASE WHEN s.order_date BETWEEN ms.join_date AND  DATEADD(day,6,ms.join_date) THEN price*10*2
              WHEN m.product_name = 'sushi' THEN price*10*2 
              ELSE price*10 END AS points
FROM
sales AS s 
INNER JOIN
menu AS m
ON
s.product_id = m.product_id
INNER JOIN
members AS ms
ON
s.customer_id = ms.customer_id
 WHERE 
    MONTH(s.order_date) = 1 -- filter to include only sales in January
)
SELECT
customer_id,SUM(points) AS ttl_points
FROM CTE 
GROUP BY customer_id
